
@page "/tournament"
@using MatchFrontend.Data
@using System.Net.Http
@using System.Web
@using MatchLibrary.ApiModel
@inject NavigationManager NavigationManager
@inject ApiService ApiSrv
@inject Microsoft.Extensions.Localization.IStringLocalizer<ListTournaments> Localizer
@inject MatchFrontend.Data.Settings Settings

@if (TournamentList == null)
{
    <p><em>@Localizer["Loading"]</em></p>
}
else
{
    <a href="/addtournament">@Localizer["TournamentCreate"]</a>

    <table class="table">
        <thead>
            <tr>
                <th>@Localizer["Name"]</th>
                <th>@Localizer["Date"]</th>
                <th>@Localizer["City"]</th>
                <th>@Localizer["Location"]</th>
                <th>@Localizer["Organizer"]</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tournament in TournamentList)
            {
                <tr>
                    <td>@tournament.Name</td>
                    <td>@tournament.Date.Value.ToString("dd.MM.yyyy")</td>
                    <td>@tournament.City</td>
                    <td>@tournament.Location</td>
                    <td>@tournament.Organisator</td>
                    <td><a href="/tournament/@tournament.Id">@(Localizer["Manage"])</a></td>
                    <td>
                        @if (tournament.Id != Settings.SelectedTournamentId)
                        {
                            <button class="btn btn-primary" @onclick="@(e => SetActive(tournament.Id))">@Localizer["SetCurrent"]</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<DtoTournament> TournamentList;

    protected override async Task OnInitializedAsync()
    {
        TournamentList = await ApiSrv.GetTournamentListAsync();
    }

    private async void SetActive(int tournamentId)
    {
        await ApiSrv.SetSettingAsync(new DtoSetting() { Name = "SelectedTournament", Value = tournamentId.ToString() });
        Settings.SelectedTournamentId = tournamentId;
        Settings.SelectedTournamentName = TournamentList.Single(x => x.Id == tournamentId).Name;

        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
}