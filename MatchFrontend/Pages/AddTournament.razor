
@page "/addtournament"
@using MatchFrontend.Data
@using System.Net.Http
@using System.Web
@using MatchLibrary.ApiModel
@inject NavigationManager NavigationManager
@inject ApiService ApiSrv


<h1>Turnier erstellen</h1>

@if (1==2) @*(teamList == null || refereeList == null)*@
{
    <p><em>Loading...</em></p>
}
else
{
<EditForm Model="@newTournament" OnValidSubmit="@SaveTournament">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <a>Name</a>
    <InputText id="txtTournamentName" type="text" class="form-control" @bind-Value="newTournament.Name" />
    <ValidationMessage For="@(() => newTournament.Name)" />
    <br />

    <a>Datum</a>
    <InputDate id="txtTournamentDate" type="date" class="form-control" @bind-Value="newTournament.Date" />
    <ValidationMessage For="@(() => newTournament.Date)" />
    <br />

    <a>Stadt</a>
    <InputText id="txtTournamentCity" type="text" class="form-control" @bind-Value="newTournament.City" />
    <ValidationMessage For="@(() => newTournament.City)" />
    <br />

    <a>Spielstätte</a>
    <InputText id="txtTournamentLocation" type="text" class="form-control" @bind-Value="newTournament.Location" />
    <ValidationMessage For="@(() => newTournament.Location)" />
    <br />

    <a>Organisator</a>
    <InputText id="txtTournamentOrganisator" type="text" class="form-control" @bind-Value="newTournament.Organisator" />
    <ValidationMessage For="@(() => newTournament.Organisator)" />
    <br />

    <button class="btn btn-primary" type="submit">Speichern</button>
</EditForm>
}

@code {
    private DtoTournament newTournament = new DtoTournament();

    //protected override async Task OnInitializedAsync()
    //{

    //}

    private async void SaveTournament()
    {
        await ApiSrv.AddTournamentAsync(newTournament);
        NavigationManager.NavigateTo("/tournament");
    }
}