
@page "/addtournament"
@using MatchFrontend.Data
@using System.Net.Http
@using System.Web
@using MatchLibrary.ApiModel
@inject NavigationManager NavigationManager
@inject ApiService ApiSrv
@inject Microsoft.Extensions.Localization.IStringLocalizer<AddTournament> Localizer


<h1>@Localizer["TournamentCreate"]</h1>

@if (1 == 2)@*(teamList == null || refereeList == null)*@
{
    <p><em>@Localizer["Loading"]</em></p>
}
else
{
    <EditForm Model="@newTournament" OnValidSubmit="@SaveTournament">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <a>@Localizer["Name"]</a>
        <InputText id="txtTournamentName" type="text" class="form-control" @bind-Value="newTournament.Name" />
        <ValidationMessage For="@(() => newTournament.Name)" />
        <br />

        <a>@Localizer["Date"]</a>
        <InputDate id="txtTournamentDate" type="date" class="form-control" @bind-Value="newTournament.Date" />
        <ValidationMessage For="@(() => newTournament.Date)" />
        <br />

        <a>@Localizer["City"]</a>
        <InputText id="txtTournamentCity" type="text" class="form-control" @bind-Value="newTournament.City" />
        <ValidationMessage For="@(() => newTournament.City)" />
        <br />

        <a>@Localizer["Location"]</a>
        <InputText id="txtTournamentLocation" type="text" class="form-control" @bind-Value="newTournament.Location" />
        <ValidationMessage For="@(() => newTournament.Location)" />
        <br />

        <a>@Localizer["Organizer"]</a>
        <InputText id="txtTournamentOrganisator" type="text" class="form-control" @bind-Value="newTournament.Organisator" />
        <ValidationMessage For="@(() => newTournament.Organisator)" />
        <br />

        <button class="btn btn-primary" type="submit">@Localizer["Save"]</button>
    </EditForm>
}

@code {
    private DtoTournament newTournament = new DtoTournament();

    //protected override async Task OnInitializedAsync()
    //{

    //}

    private async void SaveTournament()
    {
        await ApiSrv.AddTournamentAsync(newTournament);
        NavigationManager.NavigateTo("/tournament");
    }
}